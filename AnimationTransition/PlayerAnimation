using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerAnimation : MonoBehaviour
{
    /**NOTE: The PlayerMovement script is used to control the player; references the playerSpeed parameter to control the transition speed*/
    public PlayerMovement player;

    //0 is idle, 1 is walk forward, 2 is walk back, 3 is left, 4 is right
    Animator animator;

    private float playerSpeed;
    public float blendX;
    public float blendY;

    // Start is called before the first frame update
    void Start()
    {
        animator = GetComponent<Animator>();
    }

    // Update is called once per frame
    void Update()
    {
        transform.position = new Vector3(player.transform.position.x, player.transform.position.y - 2.0f, player.transform.position.z);

        blendX = Mathf.Clamp(blendX, -1f, 1f);
        blendY = Mathf.Clamp(blendY, -1f, 1f);

        playerSpeed = player.getPlayerSpeed();

        if (Input.GetKey(KeyCode.W)) //Forward
        {
            blendY += (blendY >= 1) ? 0 : playerSpeed * Time.deltaTime;
            animator.SetFloat("BlendY", blendY);
        }
        else if (Input.GetKey(KeyCode.S)) //Backward
        {
            blendY += (blendY <= -1) ? 0 : -playerSpeed * Time.deltaTime;
            animator.SetFloat("BlendY", blendY);
        }
        else//Not walking
        {
            //NOTE: Try to optimize this problem
            if (blendY > 0)
            {
                blendY += -playerSpeed * Time.deltaTime;
                blendY = Mathf.Clamp(blendY, 0, 1); //***After the blendY value reaches 0, clamp it between 0 and 1 to prevent overflow
            }
            else if (blendY < 0)
            {
                blendY += playerSpeed * Time.deltaTime;
                blendY = Mathf.Clamp(blendY, -1, 0);
            }
            else
            {
                blendY = 0;
            }
            animator.SetFloat("BlendY", blendY);
        }

        if (Input.GetKey(KeyCode.A)) //Left
        {
            blendX += (blendX <= -1) ? 0 : -playerSpeed * Time.deltaTime;
            animator.SetFloat("BlendX", blendX);
        }
        else if (Input.GetKey(KeyCode.D)) //Right
        {
            blendX += (blendX >= 1) ? 0 : playerSpeed * Time.deltaTime;
            animator.SetFloat("BlendX", blendX);
        }
        else //Not walking
        {
            if(blendX > 0)
            {
                blendX += -playerSpeed * Time.deltaTime;
                blendX = Mathf.Clamp(blendX, 0, 1);
            }
            else if(blendX < 0)
            {
                blendX += playerSpeed * Time.deltaTime;
                blendX = Mathf.Clamp(blendX, -1, 0);
            }
            else
            {
                blendX = 0;
            }
            animator.SetFloat("BlendX", blendX);
        }
    }
}
